name: Ejecutar Pruebas de Karate

on:
  push:
    branches:
      - main  # Se ejecuta en cada push a la rama main
  workflow_dispatch: # Permite la ejecución manual desde la interfaz de GitHub Actions
    inputs:
      branch:
        description: 'Rama a ejecutar (opcional, por defecto es main)'
        required: false
        default: 'main'

jobs:
  ejecutar-pruebas:
    runs-on: ubuntu-22.04 # Usa una imagen de Ubuntu más reciente

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'main' }} # Usa la rama del input o main por defecto

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11' # Usa una versión de Java compatible con Karate y Maven
          cache: 'maven' # Habilita el caché de Maven para acelerar las builds

      - name: Instalar Dependencias y Ejecutar Pruebas
        run: |
          mvn clean test # Ejecuta las pruebas de Maven y Karate
        # Env vars para asegurar que el path es correcto
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}

      - name: Empaquetar Reporte de Karate
        if: always() # Se ejecuta incluso si las pruebas fallan
        run: |
          # Verifica si el directorio de reportes existe
          if [ -d "target/karate-reports" ]; then
            echo "✅ Se encontró el directorio de reportes de Karate."
            # Comprime el directorio de reportes
            zip -r karate-report.zip target/karate-reports
            echo "✅ Se creó el archivo karate-report.zip"
            # Define la ruta del reporte ZIP
            REPORT_ZIP_PATH="${{ github.workspace }}/karate-report.zip"
            echo "REPORT_ZIP_PATH=$REPORT_ZIP_PATH" >> $GITHUB_ENV
          else
            echo "❌ No se encontró el directorio de reportes de Karate."
            # Crea un archivo ZIP vacío para evitar errores
            touch karate-report.zip
            REPORT_ZIP_PATH="${{ github.workspace }}/karate-report.zip"
            echo "REPORT_ZIP_PATH=$REPORT_ZIP_PATH" >> $GITHUB_ENV
          fi

      - name: Subir Reporte de Karate como Artefacto
        if: always() # Se ejecuta incluso si las pruebas fallan
        uses: actions/upload-artifact@v4
        with:
          name: karate-report
          path: ${{ env.REPORT_ZIP_PATH }} # Usa la variable de entorno definida anteriormente

